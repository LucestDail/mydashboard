{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Walk.js","components/WalkFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","firebaseInstance","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","FacebookAuthProvider","signInWithPopup","Walk","walkObj","isOwner","turning","setTurning","text","newWalk","setNewWalk","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleTurning","update","src","width","height","alt","WalkFactory","userObj","walk","setWalk","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","onFileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","maxLength","accept","Home","walks","setWalks","useEffect","onSnapshot","snapshot","walkArray","docs","map","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","Profile","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","getMonth","getDate","fbase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca9a213b.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n  };\r\nexport default firebase.initializeApp(firebaseConfig);\r\nexport const authService = firebase.auth();\r\nexport const firebaseInstance = firebase;\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, {useState} from \"react\";\r\nimport { authService } from \"../fbase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) =>{\r\n        const{target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value)\r\n        }else if(name ===\"password\"){\r\n            setPassword(value);\r\n        }\r\n    }\r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, password\r\n                )\r\n            }else{\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, password\r\n                )\r\n            }\r\n            console.log(data)\r\n        }catch(error){\r\n            setError(error.message);\r\n        }\r\n        \r\n    };\r\n    const toggleAccount = () => setNewAccount(prev => !prev);\r\n\r\n    return (<>\r\n    <form onSubmit ={onSubmit}>\r\n            <input\r\n            name =\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required value={email}\r\n            onChange = {onChange}\r\n            />\r\n            <input\r\n            name =\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required value={password}\r\n            onChange = {onChange}\r\n            />\r\n            <input\r\n            type=\"submit\"\r\n            value={newAccount ? \"Create Account\" : \"Log in\"}\r\n            />\r\n            {error}\r\n        </form>\r\n        <span onClick={toggleAccount}>\r\n            {newAccount ? \"Sign in\" : \"Create Account\"}\r\n            </span>\r\n    </>)\r\n}\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { authService, firebaseInstance } from \"../fbase\";\r\nimport AuthForm from \"components/AuthForm\"; \r\nconst Auth =() => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target : {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name ===\"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }else if(name ===\"facebook\"){\r\n            provider = new firebaseInstance.auth.FacebookAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n    return(\r\n    <div>\r\n        <AuthForm />\r\n        <div>\r\n            <button onClick={onSocialClick} name=\"google\">\r\n                Continue with Google\r\n            </button>\r\n            <button onClick={onSocialClick} name=\"github\">\r\n                Continue with GitHub\r\n            </button>\r\n            <button onClick={onSocialClick} name=\"facebook\">\r\n                Continue with FaceBook\r\n            </button>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\nexport default Auth;\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"../fbase\";\r\n\r\nconst Walk = ({walkObj, isOwner}) => {\r\n    const [turning,setTurning] = useState(false);\r\n    const [newWalk, setNewWalk] = useState(walkObj.text);\r\n    const onDeleteClick = async () =>{\r\n        const ok = window.confirm(\"Are you sure you want to delete this step?\");\r\n        console.log(ok);\r\n        if(ok){\r\n            await dbService.doc(`walks/${walkObj.id}`).delete();\r\n            await storageService.refFromURL(walkObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleTurning =() => setTurning(prev => !prev);\r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        console.log(walkObj, newWalk);\r\n        await dbService.doc(`walks/${walkObj.id}`).update({\r\n            text:newWalk\r\n        });\r\n        setTurning(false);\r\n    };\r\n    const onChange = (event) =>{\r\n        const{\r\n            target:{value},\r\n        } = event;\r\n        setNewWalk(value);\r\n    };\r\n    return (\r\n    <div>\r\n        {turning ? (\r\n            <>\r\n            {isOwner && (\r\n            <>\r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"text\" placeholder=\"Turning your step\" value = {newWalk} required onChange={onChange}/>\r\n                <input type=\"submit\" value=\"Update Walk\"/>\r\n            </form>\r\n            <button onClick={toggleTurning}>Cancel</button>\r\n            </>\r\n            )\r\n            }\r\n            </>\r\n            ) : (\r\n            <>\r\n            <h4>{walkObj.text}</h4>\r\n            {walkObj.attachmentUrl &&\r\n            <img src={walkObj.attachmentUrl}\r\n            width=\"100px\"\r\n            height=\"100px\"\r\n            alt=\"attachFile\"\r\n            />}\r\n            {isOwner && (\r\n            <>\r\n                <button onClick={onDeleteClick}> Delete step</button>\r\n                <button onClick={toggleTurning}> Turn step</button>\r\n            </>\r\n            )}\r\n          </>\r\n            )}\r\n    </div>\r\n    )  \r\n};\r\n\r\nexport default Walk;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"../fbase\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nconst WalkFactory = ({userObj}) => {\r\n    const [walk, setWalk] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (walk === \"\") {\r\n            return;\r\n          }\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment,\"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const walkObj = {\r\n            text:walk,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n        \r\n        await dbService.collection(\"walks\").add(walkObj);\r\n        setWalk(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange=(event) => {\r\n        const{target:{value},\r\n    } = event;\r\n    setWalk(value);\r\n    };\r\n\r\n    const onFileChange=async(event) => {\r\n        const{target:{files},\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) =>{\r\n        const {\r\n            currentTarget: {result},\r\n        } = finishedEvent;\r\n        setAttachment(result)\r\n    }\r\n    reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachmentclick =() =>setAttachment(\"\");\r\n\r\n\r\n    return(\r\n        <form onSubmit={onSubmit}>\r\n                <input\r\n                value={walk}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What is on your mind?\"\r\n                maxLength={120}\r\n                />\r\n                <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                />\r\n                <input\r\n                type=\"submit\"\r\n                value=\"Walk\" />\r\n                {attachment && <div>\r\n                <img\r\n                src={attachment}\r\n                width=\"100px\"\r\n                height=\"100px\"\r\n                alt=\"img\"\r\n                />\r\n                <button onClick={onClearAttachmentclick}>Clear</button>\r\n                </div>\r\n                }\r\n            </form>\r\n    )\r\n};\r\nexport default WalkFactory;","import React, { useEffect, useState } from \"react\";\r\nimport Walk from \"../components/Walk\";\r\nimport { dbService } from \"../fbase\";\r\nimport WalkFactory from \"../components/WalkFactory\";\r\nconst Home = ({userObj}) => {\r\n    const [walks, setWalks] = useState([]);\r\n    // const getWalks = async() =>{\r\n    //     const dbWalks = await dbService.collection(\"walks\").get();\r\n    //     dbWalks.forEach((document) => {\r\n    //         const walkObject = {\r\n    //             ...document.data(),\r\n    //             id: document.id,\r\n    //         };\r\n    //         setWalks((prev) => [walkObject, ...prev]);\r\n    //     });\r\n    // };\r\n    useEffect(() => {\r\n        // getWalks();\r\n        dbService.collection(\"walks\").onSnapshot((snapshot) => {\r\n            const walkArray = snapshot.docs.map(doc =>({\r\n                id:doc.id,\r\n            ...doc.data(),\r\n        }));\r\n        setWalks(walkArray);\r\n        });\r\n    },[]);\r\n    return(\r\n        <div>\r\n            <WalkFactory userObj={userObj}/>\r\n            <div>\r\n                {walks.map((walk) => (\r\n                    <Walk\r\n                    key = {walk.id}\r\n                    walkObj = {walk}\r\n                    isOwner = {walk.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;\r\n\r\n","import React, {useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService} from \"../fbase\";\r\n\r\n\r\nexport default({refreshUser, userObj})=>{\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () =>{\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange =(event) => {\r\n        const{target:{value},} = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            })\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    // const getMyWalks = async () => {\r\n    //     const walks = await dbService\r\n    //     .collection(\"walks\")\r\n    //     .where(\"creatorId\", \"==\",userObj.uid)\r\n    //     .orderBy(\"createdAt\",\"asc\")\r\n    //     .get();\r\n    //     console.log(walks.docs.map((doc) => doc.data()));\r\n    // };\r\n    // useEffect(() => {\r\n    //     getMyWalks();\r\n    // },[]);\r\n    \r\n    return(\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n            <input\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Display Name\"\r\n            value={newDisplayName}\r\n            />\r\n            <input\r\n            type=\"submit\"\r\n            value=\"Update profile\"\r\n            />\r\n        </form>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navigation = ({userObj}) => (\r\n<nav>\r\n    <ul>\r\n        <li>\r\n            <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n            <Link to=\"/profile\">{userObj.displayName} Profile</Link>\r\n        </li>\r\n    </ul>\r\n    lalalla\r\n    </nav>\r\n)\r\nexport default Navigation;","// eslint-disable-next-line\r\nimport React, { useState } from \"react\";\r\nimport { HashRouter as Router, Redirect, Route, Switch }from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\"\r\n\r\nconst AppRouter= ({refreshUser, isLoggedIn, userObj}) =>{\r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj ={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                <>\r\n                <Route exact path = \"/\">\r\n                    <Home userObj={userObj}/>\r\n                </Route>\r\n                <Route exact path = \"/profile\">\r\n                    <Profile\r\n                    userObj={userObj}\r\n                    refreshUser={refreshUser}/>\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n                </>\r\n                ) : (\r\n                    <>\r\n                <Route exact path = \"/\">\r\n                    <Auth />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n                </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n\r\n}\r\n\r\nexport default AppRouter;","import React, {useEffect, useState} from 'react';\nimport AppRouter from 'components/Router';\n// eslint-disable-next-line\nimport { authService } from \"fbase\";\n\n\nfunction App() {\n  // eslint-disable-next-line\n  const[init, setInit] = useState(false);\n  // eslint-disable-next-line\n  const [userObj, setUserObj] = useState(null);\n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=> {\n      if(user){\n        // setUserObj(user);\n\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile:(args) => user.updateProfile(args)\n        });\n      }else{\n        setUserObj(null);\n      }\n      setInit(true);\n    })\n  }, []);\n\n  const refreshUser =() =>{\n    const user = authService.currentUser;\n    // setUserObj(Object.assign({}.user));\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile:(args) => user.updateProfile(args)\n    });\n  };\n\n  return (\n  <>\n   {init ? (\n    <AppRouter\n    refreshUser={refreshUser}\n    isLoggedIn={Boolean(userObj)}\n    userObj={userObj}/>\n    ) : (\n      \"Initializing...\"\n    )}\n  <footer>\n    &copy; WalkDown {new Date().getFullYear()}.{new Date().getMonth()+1}.{new Date().getDate()}\n  </footer>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport fbase from \"./fbase\";\nconsole.log(fbase)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}